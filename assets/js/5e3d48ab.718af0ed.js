"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[101],{1184:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>a});var n=s(4041);const t={},o=n.createContext(t);function i(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(o.Provider,{value:r},e.children)}},4264:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"tutorial/routing","title":"Routing","description":"Juadz provides built-in routing for all resources, automatically generating standard RESTful endpoints. For example:","source":"@site/docs/tutorial/6-routing.md","sourceDirName":"tutorial","slug":"/tutorial/routing","permalink":"/juadz/docs/tutorial/routing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial/6-routing.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Resource","permalink":"/juadz/docs/tutorial/resource"},"next":{"title":"Authentication","permalink":"/juadz/docs/tutorial/authentication"}}');var t=s(1085),o=s(1184);const i={sidebar_position:6},a="Routing",d={},u=[{value:"Custom Route Providers",id:"custom-route-providers",level:2},{value:"ListAdaptor",id:"listadaptor",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"routing",children:"Routing"})}),"\n",(0,t.jsx)(r.p,{children:"Juadz provides built-in routing for all resources, automatically generating standard RESTful endpoints. For example:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"GET /users"})," \u2014 List all users"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"GET /users/:id"})," \u2014 Retrieve a single user"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"POST /users"})," \u2014 Create a new user"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"PATCH /users/:id"})," \u2014 Update user fields"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"PUT /users/:id"})," \u2014 Replace a user resource"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"DELETE /users/:id"})," \u2014 Delete a user"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"You can easily disable specific routes for a resource:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"userResource.disable(['delete']);\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"custom-route-providers",children:"Custom Route Providers"}),"\n",(0,t.jsx)(r.p,{children:"If you need more control over your routes, you can implement a custom route provider. This allows you to override the default routing logic for any resource."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'export function myCustomProvider(\n    action: keyof IDataRepositoryProvider,\n    resourceName: string,\n): RouterDef {\n    switch (action) {\n        case "get":\n            return { path: `${resourceName}/:id`, method: "GET" };\n        case "create":\n            return { path: `${resourceName}`, method: "POST" };\n        case "update":\n            return { path: `${resourceName}/:id`, method: "PUT" }; // Use PUT for update\n        case "replace":\n            return null; // Disable replace route\n        case "delete":\n            return { path: `${resourceName}/:id`, method: "DELETE" };\n        case "list":\n            return { path: `${resourceName}`, method: "GET" };\n        default:\n            throw new Error(`Unsupported action: ${action}`);\n    }\n}\n\nuserResource.setRouterProvider(myCustomProvider);\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"listadaptor",children:"ListAdaptor"}),"\n",(0,t.jsxs)(r.p,{children:["Different frontends or organizations may require custom formats for listing resources. Juadz uses a ",(0,t.jsx)(r.code,{children:"QueryListAdaptor"})," to transform incoming query data into a standard format (",(0,t.jsx)(r.code,{children:"QueryListParam"}),") and to convert results (",(0,t.jsx)(r.code,{children:"QueryListResults"}),") into the desired response format."]}),"\n",(0,t.jsxs)(r.p,{children:["Juadz includes a default ",(0,t.jsx)(r.code,{children:"QueryListAdaptor"})," that accepts queries like:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"?filter=field1:value1,field2:value2&limit=10&offset=0&sort=-id\n"})}),"\n",(0,t.jsxs)(r.p,{children:["This is parsed into standard ",(0,t.jsx)(r.code,{children:"QueryFilter"}),", ",(0,t.jsx)(r.code,{children:"QueryRange"}),", and ",(0,t.jsx)(r.code,{children:"QuerySort"})," objects for the data provider."]}),"\n",(0,t.jsxs)(r.p,{children:["After the database processes the query, results are returned as ",(0,t.jsx)(r.code,{children:"QueryListResults"}),". The default adaptor transforms this into a response such as:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{\n  "body": [{...user_1}, {...user_2}, ...],\n  "headers": {\n    "X-total-user": "100"\n  }\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"If your frontend requires a different format, you can implement your own ListAdaptor by providing the following structure:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"export type QueryListAdaptor<T> = {\n    parser: (\n        resource: string,\n        queryString?: Record<string, string> | null,\n        params?: Record<string, string> | null,\n        body?: unknown,\n        headers?: Record<string, string> | null,\n    ) => QueryListParam;\n\n    response: (\n        result: QueryListResults<T>,\n        params: QueryListParam,\n        name: string,\n    ) => QueryListResponse;\n\n    params: string[];\n\n    // Optional schemas for documentation\n    querySchema?: ZodObject;\n    paramsSchema?: ZodObject;\n    bodySchema?: ZodType;\n    headersSchema?: ZodObject;\n    responseSchema?: ZodType;\n    responseHeadersSchema?: ZodObject;\n};\n"})}),"\n",(0,t.jsx)(r.p,{children:"To use your custom adaptor:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"userResource.setListAdaptor(myCustomListAdaptor);\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.p,{children:"Juadz\u2019s routing system is designed for flexibility, allowing you to quickly set up standard endpoints or customize them to fit"})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);