import fastify from "fastify";
import JuadzFastify from "@juadz/fastify";

import authProvider from "./authentication/provider";
import { closeDatabase, migrate } from "./db";

import { UserResource } from "./resource/User";
import { ProductResource } from "./resource/Product";
import { CustomerResource } from "./resource/Customer";
import { CategoryResource } from "./resource/Category";

const server = fastify({
    logger: process.env.NODE_ENV === 'test' ? false : true
});

export const createServer = async () => {
    await migrate();

    server.get("/ping", async () => {
        return { pong: "it worked!" };
    });

    server.addHook('onClose', (instance, done) => {
        server.log.debug(`Closing server...`);
        closeDatabase()
        done()
    })

    await server.register(JuadzFastify, {
        prefix: "/api/v1",
        resources: [
            UserResource,
            ProductResource,
            CustomerResource,
            CategoryResource,
        ],
        authentication: authProvider,
        docs: {
            title: "Juadz Fastify Example",
            description: "Auto generated by @juadz",
            version: "0.0.1",
            url: ["http://localhost:3000"],
        },
    });

    await server.ready();

    return server;
};
