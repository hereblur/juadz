import { FastifyInstance } from "fastify";
import fastifySwagger from "@fastify/swagger";
import FastifySwaggerUI from "@fastify/swagger-ui";
import { JuadzFastifyOptions } from "./types";
import fp from "fastify-plugin";
import Debug from "debug";

const debug = Debug("juadz:fastify:docs");

export default fp(async function (
    fastify: FastifyInstance,
    options: JuadzFastifyOptions,
) {
    if (!options.docs) {
        debug(`OpenAPI documentation is disabled`);
        return;
    }

    const routePrefix = (options.docs.prefix || "/documentations").replace(/\/+$/, "");

    debug(
        `Registering OpenAPI documentation at ${options.docs.url[0]}${routePrefix}, json at ${options.docs.url[0]}${routePrefix}/json`,
    );
    await fastify.register(fastifySwagger, {
        openapi: {
            info: {
                title: options.docs.title || "OpenAPI Documentation",
                description:
                    options.docs.description || "Auto generated by @juadz",
                version: options.docs.version || "0.0.0",
            },
            servers: options.docs.url?.length
                ? options.docs.url.map((url) => ({ url }))
                : [{ url: "http://localhost:3000" }],
            components: {
                securitySchemes: options.authentication,
            },
        },
    });

    await fastify.register(FastifySwaggerUI, {
        routePrefix: routePrefix,
        uiConfig: {
            deepLinking: false,
            url: `${routePrefix}/json`,
        },
        staticCSP: false,
        transformStaticCSP: (header) => header,
    });
});
